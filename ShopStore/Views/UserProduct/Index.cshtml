@using DAL.Models;

@model IEnumerable<UserProduct>

@{
    ViewData["Title"] = "User Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<div class="container">
    <h1>@ViewData["Title"]</h1>
    <table class="table table-bordered table-striped" id="datatable">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Product.Name)</th>
                @if (User.IsInRole("Admin"))
                {
                    <th>@Html.DisplayNameFor(model => model.User.FullName)</th>
                    <th>@Html.DisplayNameFor(model => model.User.Email)</th>
                }             
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Name)
                    </td>
                    @if (User.IsInRole("Admin"))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.User.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.Email)
                        </td>
                    }               
                    <td>
                        <div class="d-flex justify-content-between">
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary">Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            }                            
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                            
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
